"use client";

import { Area, AreaChart, XAxis, YAxis, Tooltip } from "recharts";
import { ChartConfig, ChartContainer } from "@/components/ui/shadcn/chart";

const ConvertorChart = () => {
  const chartConfig = {
    desktop: {
      label: "Desktop",
      color: "#2563eb",
    },
    mobile: {
      label: "Mobile",
      color: "#60a5fa",
    },
  } satisfies ChartConfig;

  const data = [
    2140.031551265381, 2105.1234717696707, 2117.5214905155817,
    2088.854414251744, 2056.031332897965, 2025.6603913700524,
    2020.1392394088136, 2042.6194124272822, 2044.3311873886132,
    2020.2468095021698, 2007.5984386333182, 2030.7220422992398,
    2036.5936806673253, 2039.24115100129, 2056.3264159707496,
    2063.7937437431756, 2073.2890255809652, 2066.3340652524926,
    2067.010590909661, 2074.039994435905, 2060.600066728745, 2101.9438026637827,
    2103.501775603864, 2138.0054698543277, 2124.739658780596,
    2053.1662098045895, 2002.4139131805994, 2019.7512263198464,
    2010.2257695175513, 1923.2753012576773, 1840.4928036346469,
    1868.3831442914993, 1872.0708872981158, 1886.1340131454283,
    1880.1234190854445, 1867.8677194834852, 1813.2078069999318,
    1853.9612001417102, 1861.1833018390466, 1854.1832956453702,
    1869.24071491409, 1893.1979686560348, 1888.0091746858768,
    1904.5553711087578, 1908.5745345396897, 1917.8576169647451,
    1922.9038218529581, 1908.875899582352, 1894.4493381541465,
    1903.4089134646138, 1879.0531541133264, 1914.504461949955,
    1915.9010091977736, 1905.1496547682564, 1949.3820115733656,
    1948.4042512276435, 1937.9478375737292, 1940.7706228627624,
    1945.393125290344, 1916.682355537527, 1911.196912522459, 1921.3420284146575,
    1892.4636873458642, 1861.0872541637743, 1864.9924204599488,
    1878.5546130324403, 1878.7099807825816, 1912.6580418673598,
    1944.1753560427242, 1893.2355696706245, 1900.2653953186586,
    1915.5890515761396, 1929.4733505905956, 1884.6050304521616,
    1846.7411588405375, 1873.1063260758078, 1875.9243450492625,
    1868.5821392070757, 1876.573789032771, 1875.3816795566381,
    1886.0032894452706, 1899.6043815469561, 1910.123744762707,
    1909.0465779593417, 1895.477753674096, 1906.613792392134,
    1891.1217220320063, 1887.4779794995143, 1872.4735429777754,
    1868.740079437217, 1871.0083620939374, 1873.2892472651765,
    1879.3888526725655, 1890.9440406349095, 1900.6333461322902,
    1899.475664740351, 1890.221011156073, 1866.8513568889668,
    1885.1644271385576, 1873.256758895117, 1856.2744753571792,
    1833.6950503530516, 1850.0225483042095, 1846.4371585056956,
    1844.9818576386094, 1852.5898960101008, 1874.3529918294153,
    1861.296736498529, 1869.9286987110268, 1883.9937865196798,
    1889.4340784047636, 1892.2166481595834, 1891.7209804567954,
    1894.7801950271667, 1893.1427253150164, 1894.8848433040157,
    1897.0489469196182, 1893.4978661039518, 1899.9596939751261,
    1903.6051918998105, 1901.7843584691068, 1901.871328923818,
    1915.428085701497, 1921.9927222229405, 1935.907510912434,
    1938.9133615369587, 1935.804039998472, 1933.6204133839192,
    1924.2045007705894, 1921.7381320048241, 1924.9104474799067,
    1910.9921783263305, 1916.2094223502525, 1912.092420887434,
    1913.9013433518392, 1921.0471720227279, 1929.4462201824801,
    1929.73018581464, 1927.3459168192546, 1917.8139069134484,
    1918.8713984806548, 1924.345938032432, 1928.5169893834684,
    1929.9182986052342, 1924.8620675344832, 1931.8786870505314,
    1926.4768099327378, 1936.3174404683134, 1940.5682253575683,
    1942.1351790177748, 1931.5319130581886, 1936.4414772592252,
    1942.8750070209874, 1949.5914613438604, 1943.0721635110656,
    1938.525002234694, 1935.2578287126005, 1923.1023029866367,
    1922.3084887822822, 1929.5024860661724, 1927.4443024609518,
    1930.631431340415, 1928.688353993948, 1926.201757157704, 1921.4091120232813,
    1909.012301940103, 1898.8078217923103,
  ].map((el, i) => {
    return { time: i, value: el };
  });

  return (
    <ChartContainer
      config={chartConfig}
      className="mb-8 h-64 min-h-[200px] w-full rounded-md bg-[var(--foreground)]"
    >
      <AreaChart
        data={data}
        width={730}
        height={250}
        margin={{ top: 30, right: 30, left: 30, bottom: 0 }}
      >
        <defs>
          <linearGradient id="colorUv" x1="0" y1="0" x2="0" y2="1">
            <stop offset="5%" stopColor="#8884d8" stopOpacity={0.8} />
            <stop offset="95%" stopColor="#8884d8" stopOpacity={0} />
          </linearGradient>
        </defs>
        <XAxis
          dataKey="time"
          tick={({ x, y, payload }) => (
            <text
              x={x - 10}
              y={y + 10}
              textAnchor="middle"
              style={{ fill: "var(--clr-text)", fontSize: 12 }}
            >
              {payload.value}
            </text>
          )}
          minTickGap={100}
          axisLine={false}
          tickLine={false}
        />
        <YAxis domain={["dataMin", "dataMax"]} hide />
        <Tooltip />
        <Area
          type="monotone"
          dataKey="value"
          stroke="#8884d8"
          fillOpacity={1}
          fill="url(#colorUv)"
        />
      </AreaChart>
    </ChartContainer>
  );
};

export default ConvertorChart;
